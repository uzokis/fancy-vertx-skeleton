buildscript {
    repositories { jcenter() }
    dependencies {
    }
}

// PROJECT SETTINGS
plugins {
	id 'java' 
	id 'eclipse' //or your favorite IDE
	id 'com.github.johnrengelman.shadow' version '1.2.3'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'eu.fancybrackets.skeleton'
version = '0.0.1'

def versions = [
    vertx: '3.2.1',
    jooq: '3.8.4'
]

repositories {
    mavenCentral()
    maven {
        url = 'http://oss.sonatype.org/content/repositories/snapshots/'
    }
}

// DEPENDENCIES
dependencies {
    compile group: 'io.vertx', name: 'vertx-core', version: "$versions.vertx"
    compile group: 'io.vertx', name: 'vertx-web', version: "$versions.vertx"
    // ENABLE FOR AUTHENTICATION VIA SHIRO
    //compile "io.vertx:vertx-auth-shiro:$versions.vertx"
    //compile "io.vertx:vertx-auth-common:$version.vertx"
    compile group: 'com.google.inject', name: 'guice', version: '4.0'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'

    //SQL LAYER    
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.12'
    compile "org.jooq:jooq:$versions.jooq"
    compile "org.jooq:jooq-meta:$versions.jooq"
    compile "org.jooq:jooq-codegen:$versions.jooq"
    compile "com.zaxxer:HikariCP:2.4.+"//ludicrous speed connection pool
    compile "org.postgresql:postgresql:9.4.+"//compatible/recommended with/for cockroach    

    //TEST DEPENDENCIES
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.+'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.1.11'
    testCompile group: 'io.vertx', name: 'vertx-unit', version: "$versions.vertx"
}

// BUNDLING JAR WITH SHADOWJAR
shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Launcher'
        attributes 'Main-Verticle': 'eu.fancybrackets.template.verticle.MainVerticle'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

test {
    testLogging.showStandardStreams = true
}

// CONVENIENCE TASK TO RUN THE JAR DIRECTLY IN BUILD CONSOLE AND OUTPUT FINE LOGGING
task runJar(dependsOn:shadowJar) << {
    javaexec { 
        main="-jar"
        args =  [
            "build/libs/$rootProject.name-$version-fat.jar"
                ]
        jvmArgs '-Djava.util.logging.config.file=logger.properties'
    } 
}

// TASK TO RUN THE JOOQ CODE GENERATION
// TODO check again vs cockroachdb when following is fixed: https://github.com/cockroachdb/cockroach/pull/9991 
task generateJooq() << {
    javaexec { 
    	classpath = sourceSets.main.runtimeClasspath
        main="org.jooq.util.GenerationTool"
        args =  [
            "./jooq-config.xml"
                ]
        jvmArgs '-Djava.util.logging.config.file=logger.properties'
    } 
}
